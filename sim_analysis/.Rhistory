theme_sim()
ggarrange(p1, p2, p4,  p3,
labels = c("a", "b", "c", "d"),
common.legend = TRUE, legend = "bottom")
ggsave("./manuscript_plots/additional/s13.png", width = 6, height = 4)
df_num_cs <- df_cs_pop2_tmp %>%
filter(L1 == L2) %>%
filter(L1 == 2) %>%
filter(method != "sushie_ss") %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho) %>%
crossing(method = unique(df_cs_pop2_tmp$method)) %>%
filter(method != "sushie_ss") %>%
left_join(df_cs_pop2_tmp %>%
filter(L1 == L2) %>%
filter(method != "sushie_ss") %>%
select(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex,
SNPIndex_1based, causal, name = method) %>%
filter(!is.na(SNPIndex_1based)) %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex, name) %>%
group_by(sim, locus, N, L1, L2, L3, h2g, rho, name) %>%
summarize(value = n()) %>%
rename(method = name) %>%
ungroup()) %>%
mutate(value = ifelse(is.na(value), 0, value))
df_res <- tibble()
for (method_name in c("mesusie", "indep", "meta", "susie", "susiex",
"xmap", "xmap_ind")) {
df_tmp <- df_num_cs %>%
filter(method %in% c("sushie", method_name)) %>%
mutate(method = factor(method,
levels = c("sushie", method_name)))
df_res <- df_res %>%
bind_rows(
tidy(lm(value ~ method + N + L1 +h2g +rho, df_tmp)) %>%
filter(grepl("method", term))
)
}
df_res
df_res %>%
filter(!grepl("susiex", term)) %>%
mutate(weight = 1/(std.error^2)) %>%
summarize(weighted_mean = sum(estimate * weight) / sum(weight),
se = sqrt(1/sum(weight)),
p.value = 2*pnorm(abs(weighted_mean/se), lower.tail = FALSE))
# misspecified
df_tmp <- df_cs_pop2_tmp %>%
filter(L2 >= L1 & L1 == 2) %>%
filter(h2g %in% "0.05:0.05" & rho == 0.8 & N == "400:400" & L3 == 0) %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho) %>%
crossing(method = unique(df_cs_pop2_tmp$method)) %>%
filter(method != "sushie_ss") %>%
left_join(df_cs_pop2_tmp %>%
filter(method != "sushie_ss") %>%
select(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex,
SNPIndex_1based, causal, name = method) %>%
filter(!is.na(SNPIndex_1based)) %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex, name) %>%
group_by(sim, locus, N, L1, L2, L3, h2g, rho, name) %>%
summarize(value = n()) %>%
rename(method = name) %>%
ungroup()) %>%
mutate(value = ifelse(is.na(value), 0, value)) %>%
group_by(sim, N, L1, L2, L3, h2g, rho, method) %>%
summarize(mvalue = mean(value),
se = sd(value)/sqrt(n())) %>%
mutate(method= factor(method,
levels = c("sushie", "indep", "meta", "susie",
"susiex", "mesusie",  "xmap",  "xmap_ind"),
labels = c("SuShiE", "SuShiE-Indep",
"Meta-SuSiE", "SuSiE", "SuSiEx", "MESuSiE",
"XMAP", "XMAP-IND")))
ggplot(df_tmp , aes(x = factor(L2), y = mvalue, color = method)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = mvalue - 1.96*se, ymax = mvalue + 1.96*se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Num. of CSs output") +
ylim(0, 2.5) +
xlab("Number of Single Effects Specified in Inference (L) with 2 causals") +
theme_sim()
ggsave("./manuscript_plots/additional/s14.png", width = 4, height = 3.5)
df_num_cs <- df_cs_pop2_tmp %>%
filter(L1 <= L2) %>%
filter(L1 == 2) %>%
filter(h2g %in% "0.05:0.05" & rho == 0.8 & N == "400:400" & L3 == 0) %>%
filter(method != "sushie_ss") %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho) %>%
crossing(method = unique(df_cs_pop2_tmp$method)) %>%
filter(method != "sushie_ss") %>%
left_join(df_cs_pop2_tmp %>%
filter(L1 < L2) %>%
filter(L1 == 2) %>%
filter(method != "sushie_ss") %>%
select(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex, SNPIndex_1based, causal,
name = method) %>%
filter(!is.na(SNPIndex_1based)) %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex, name) %>%
group_by(sim, locus, N, L1, L2, L3, h2g, rho, name) %>%
summarize(value = n()) %>%
rename(method = name) %>%
ungroup()) %>%
mutate(value = ifelse(is.na(value), 0, value))
df_res <- tibble()
for (method_name in c("mesusie", "indep", "meta", "susie", "susiex",
"xmap", "xmap_ind")) {
df_tmp <- df_num_cs %>%
# filter(value <=2) %>%
filter(method %in% c("sushie", method_name)) %>%
mutate(method = factor(method,
levels = c("sushie", method_name)))
df_res <- df_res %>%
bind_rows(
tidy(lm(value ~ method + L2, df_tmp)) %>%
filter(grepl("method", term))
)
}
df_res
df_res %>%
filter(!grepl("susiex", term)) %>%
mutate(weight = 1/(std.error^2)) %>%
summarize(weighted_mean = sum(estimate * weight) / sum(weight),
se = sqrt(1/sum(weight)),
p.value = 2*pnorm(abs(weighted_mean/se), lower.tail = FALSE))
df_cs_pop2_tmp %>%
filter(L1 < L2) %>%
filter(L1 == 2) %>%
filter(method != "sushie_ss") %>%
select(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex, SNPIndex_1based, causal,
name = method) %>%
filter(!is.na(SNPIndex_1based)) %>%
distinct(sim, locus, N, L1, L2, L3, h2g, rho, CSIndex, name) %>%
group_by(sim, locus, N, L1, L2, L3, h2g, rho, name) %>%
summarize(value = n()) %>%
ungroup() %>%
filter(value>2) %>%
group_by(sim, name) %>%
summarize(n = n()) %>%
group_by(name) %>%
summarize(sum_n = sum(n))
# FDR-based power
tmp_df_pip_fdr <- read_tsv(glue("{sim_data_path}/fdr_pip_data.tsv"))
df_pip_fdr <- tmp_df_pip_fdr %>%
group_by(sim, N, L1, L2, L3, h2g, rho, name) %>%
summarize(Power_mean = mean(value),
Power_se = sd(value)/sqrt(n())) %>%
mutate(name = factor(name,
levels = c("sushie", "indep", "meta", "susie",
"susiex", "mesusie",  "xmap",  "xmap_ind"),
labels = c("SuShiE", "SuShiE-Indep",
"Meta-SuSiE", "SuSiE", "SuSiEx", "MESuSiE",
"XMAP", "XMAP-IND")))
df_tmp <- df_pip_fdr %>%
filter(N %in% c("200:200", "400:400", "600:600", "800:800") &
L1 == 2 & L2 == 2 & L3 == 0 & rho == "0.8" & h2g == "0.05:0.05") %>%
mutate(N = case_when(
N == "200:200" ~ 200,
N == "400:400" ~ 400,
N == "600:600" ~ 600,
N == "800:800" ~ 800))
p1 <- ggplot(df_tmp, aes(x = factor(N), y = Power_mean, color = name)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Power") +
ylim(0, 1) +
xlab("cis-molQTL Sample Size") +
theme_sim()
df_tmp <- df_pip_fdr %>%
filter(h2g %in% c("0.01:0.01", "0.05:0.05", "0.1:0.1", "0.2:0.2") &
N %in%  "400:400" &
L1 == 2 & L2 == 2 & L3 == 0 & rho == "0.8") %>%
mutate(h2g = case_when(
h2g == "0.01:0.01" ~ 0.01,
h2g == "0.05:0.05" ~ 0.05,
h2g == "0.1:0.1" ~ 0.1,
h2g == "0.2:0.2" ~ 0.2))
p2 <- ggplot(df_tmp, aes(x = factor(h2g), y = Power_mean, color = name)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Power") +
ylim(0, 1) +
xlab("cis-SNP Heritability") +
theme_sim()
df_tmp <- df_pip_fdr %>%
filter(h2g %in%  "0.05:0.05" &
N %in%  "400:400" &
L1 == L2  & L3 == 0 & rho == "0.8")
p3 <- ggplot(df_tmp, aes(x = factor(L2), y = Power_mean, color = name)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Power") +
ylim(0, 1) +
xlab("Number of cis-molQTL") +
theme_sim()
df_tmp <- df_pip_fdr %>%
filter(h2g %in% "0.05:0.05" &
N %in%  "400:400" &
L1 == 2 & L2 == 2 & L3 == 0 )
p4 <- ggplot(df_tmp, aes(x = factor(rho), y = Power_mean, color = name)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Power") +
ylim(0, 1) +
xlab("Effect Size Correlation") +
theme_sim()
ggarrange(p1, p2, p3 , p4, common.legend = TRUE, legend = "bottom",
labels = c("a", "b", "c", "d"), font.label = list(size = 8))
ggsave("./manuscript_plots/additional/s15.png", width = 6, height = 4)
df_res <- tibble()
for (method_name in c("mesusie", "indep", "meta", "susie", "susiex",
"xmap", "xmap_ind")) {
df_tmp <- tmp_df_pip_fdr %>%
filter(name %in% c("sushie", method_name)) %>%
mutate(name = factor(name,
levels = c("sushie", method_name)))
df_res <- df_res %>%
bind_rows(
tidy(lm(value ~ name + N+L1+L2+L3+rho+h2g, df_tmp)) %>%
filter(grepl("name", term))
)
}
df_res
df_res %>%
filter(!grepl("susiex", term)) %>%
mutate(weight = 1/(std.error^2)) %>%
summarize(weighted_mean = sum(estimate * weight) / sum(weight),
se = sqrt(1/sum(weight)),
p.value = 2*pnorm(abs(weighted_mean/se), lower.tail = FALSE))
tmp_df_cs_fdr <- read_tsv(glue("{sim_data_path}/fdr_cs_data.tsv"))
df_cs_fdr <- tmp_df_cs_fdr %>%
group_by(sim, N, L1, L2, L3, h2g, rho, method) %>%
summarize(n =n(),
Power_mean = mean(Power),
Power_se = sd(Power)/sqrt(n())) %>%
mutate(method= factor(method,
levels = c("sushie", "indep", "meta", "susie",
"susiex", "mesusie",  "xmap",  "xmap_ind"),
labels = c("SuShiE", "SuShiE-Indep",
"Meta-SuSiE", "SuSiE", "SuSiEx", "MESuSiE",
"XMAP", "XMAP-IND")))
df_tmp <- df_cs_fdr %>%
filter(N %in% c("200:200", "400:400", "600:600", "800:800") &
L1 == 2 & L2 == 2 & L3 == 0 & rho == "0.8" & h2g == "0.05:0.05") %>%
mutate(N = case_when(
N == "200:200" ~ 200,
N == "400:400" ~ 400,
N == "600:600" ~ 600,
N == "800:800" ~ 800))
p1 <- ggplot(df_tmp, aes(x = factor(N), y = Power_mean, color = method)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Coverage") +
ylim(0,1) +
xlab("cis-molQTL Sample Size") +
theme_sim()
df_tmp <- df_cs_fdr %>%
filter(h2g %in% c("0.01:0.01", "0.05:0.05", "0.1:0.1", "0.2:0.2") &
N %in%  "400:400" &
L1 == 2 & L2 == 2 & L3 == 0 & rho == "0.8") %>%
mutate(h2g = case_when(
h2g == "0.01:0.01" ~ 0.01,
h2g == "0.05:0.05" ~ 0.05,
h2g == "0.1:0.1" ~ 0.1,
h2g == "0.2:0.2" ~ 0.2))
p2 <- ggplot(df_tmp, aes(x = factor(h2g), y = Power_mean, color = method)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Coverage") +
ylim(0,1) +
xlab("cis-SNP Heritability") +
theme_sim()
df_tmp <- df_cs_fdr %>%
filter(h2g %in%  "0.05:0.05" &
N %in%  "400:400" &
L1 == L2  & L3 == 0 & rho == "0.8")
p3 <- ggplot(df_tmp, aes(x = factor(L2), y = Power_mean, color = method)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Coverage") +
ylim(0,1) +
xlab("Number of cis-molQTL") +
theme_sim()
df_tmp <- df_cs_fdr %>%
filter(h2g %in% "0.05:0.05" &
N %in%  "400:400" &
L1 == 2 & L2 == 2 & L3 == 0 )
p4 <- ggplot(df_tmp, aes(x = factor(rho), y = Power_mean, color = method)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = Power_mean - 1.96*Power_se, ymax = Power_mean + 1.96*Power_se),
width = 0.05, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
ylab("Coverage") +
ylim(0,1) +
xlab("Effect Size Correlation") +
theme_sim()
ggarrange(p1, p2, p3 , p4, common.legend = TRUE, legend = "bottom",
labels = c("a", "b", "c", "d"), font.label = list(size = 8))
ggsave("./manuscript_plots/additional/s16.png", width = 6, height = 4)
df_res <- tibble()
for (method_name in c("mesusie", "indep", "meta", "susie", "susiex",
"xmap", "xmap_ind")) {
df_tmp <- tmp_df_cs_fdr %>%
filter(method %in% c("sushie", method_name)) %>%
mutate(method = factor(method,
levels = c("sushie", method_name)))
df_res <- df_res %>%
bind_rows(
tidy(lm(Power ~ method + N+L1+L2+L3+rho+h2g, df_tmp)) %>%
filter(grepl("method", term))
)
}
df_res
df_res %>%
filter(!grepl("susiex", term)) %>%
mutate(weight = 1/(std.error^2)) %>%
summarize(weighted_mean = sum(estimate * weight) / sum(weight),
se = sqrt(1/sum(weight)),
p.value = 2*pnorm(abs(weighted_mean/se), lower.tail = FALSE))
df_res %>%
filter(!grepl("susiex", term)) %>%
filter(!grepl("xmap", term)) %>%
mutate(weight = 1/(std.error^2)) %>%
summarize(weighted_mean = sum(estimate * weight) / sum(weight),
se = sqrt(1/sum(weight)),
p.value = 2*pnorm(abs(weighted_mean/se), lower.tail = FALSE))
tmp_df_fst <- read_tsv(glue("{sim_data_path}/sushie_real_fst.tsv.gz")) %>%
filter(`#POP1` == "AFR" & POP2 == "EUR") %>%
mutate(method = "Real Data from TOPMed MESA mRNA") %>%
select(method, fst = `HUDSON_FST`) %>%
filter(fst >=0)
set.seed(123)
df_fst <- tmp_df_fst %>%
bind_rows(df_causal_fst %>%
left_join(df_param) %>%
sample_n(nrow(tmp_df_fst)) %>%
mutate(method = "Sim Data from 1000G") %>%
select(method, fst)) %>%
mutate(method = factor(method,
levels = c("Sim Data from 1000G",
"Real Data from TOPMed MESA mRNA"),
labels = c("Simulated cis-molQTLs from 1000G",
"Putative cis-eQTLs from TOPMed MESA mRNA")))
library(tidyverse)
library(glue)
library(ggpubr)
library(broom)
library(RColorBrewer)
# to replicate our figures you need to download the data from the zenodo link
# and point it to simulation data paht
sim_data_path <- "~/Downloads/sushie_sim_data_results/"
ffont <- "sans"
fontsize <- 7
legend_fontsize <- 7
errbar_width <- 0.5
scaleFUN <- function(x) sprintf("%.2f", x)
p_width <- 7.08
p_height <- 2.5
point_size <- 1.5
theme_sim <- function() {
theme(panel.grid.major.x = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = NA),
legend.title = element_blank(),
legend.text = element_text(face = "bold", size = legend_fontsize),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title=element_text(face="bold", size=fontsize),
axis.text=element_text(size = fontsize),
legend.position = "bottom")
}
method_colors <-c("SuShiE" = "#1b9e77", "SuShiE-Indep" = "#d95f02",
"Meta-SuSiE" = "#7570b3", "SuSiE" = "#e7298a",
"SuSiEx" = "#66a61e", "MESuSiE" = "#e6ab02", "XMAP" = "#a6761d", "XMAP-IND" = "#666666")
twas_colors <- c(method_colors,
"LASSO" = "#fb8072", "Elastic Net" = "#b3de69", "gBLUP" = "#fccde5")
load("./data/df_2pop.RData")
df_m1 <- df_2pop %>%
group_by(sim, N, L1, L2, L3, h2g, rho, name, type) %>%
filter(!is.na(value)) %>%
summarize(mvalue = mean(value),
se = 1.96 * (sd(value) / sqrt(n()))) %>%
filter(N %in% c("200:200", "400:400", "600:600", "800:800") &
L1 == L2 & L3 == 0 & L1==2 &
h2g %in% "0.05:0.05" &
rho %in% c("0.8")) %>%
mutate(N = case_when(
N == "200:200" ~ 200,
N == "400:400" ~ 400,
N == "600:600" ~ 600,
N == "800:800" ~ 800))
tmp_p1 <- filter(df_m1, type == "PIP")
small_p1 <- ggplot(tmp_p1,
aes(x = factor(N), y = mvalue, color= factor(name))) +
geom_point(size=point_size, position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = mvalue - se, ymax = mvalue + se),
position=position_dodge(width=0.5), width = 0.2) +
scale_color_manual(values = method_colors) +
ylab("PIP of molQTLs") +
xlab("molQTL Sample Size") +
theme_sim()
tmp_p2 <- filter(df_m1, type == "CS")
small_p2 <- ggplot(tmp_p2,
aes(x = factor(N), y = mvalue, color= factor(name))) +
geom_point(size = point_size, position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = mvalue - se, ymax = mvalue + se),
position=position_dodge(width=0.5), width = 0.2) +
scale_color_manual(values =  method_colors) +
scale_y_continuous(labels=scaleFUN) +
xlab("molQTL Sample Size") +
ylab("CS size") +
theme_sim()
tmp_p3 <- filter(df_m1, type == "Calibration")
small_p3 <- ggplot(tmp_p3,
aes(x = factor(N), y = mvalue, color= factor(name))) +
geom_point(size = point_size, position=position_dodge(width=0.5)) +
scale_color_manual(values = method_colors) +
geom_errorbar(aes(ymin = mvalue - se, ymax = mvalue + se),
position=position_dodge(width=0.5), width = 0.2) +
scale_y_continuous(labels=scaleFUN, breaks=c(seq(from=0,to=1,by=0.25), 0.9)) +
ylab("Freq. of molQTLs in CS") +
xlab("molQTL Sample Size") +
theme_sim()
df_rho <- read_tsv(glue("{sim_data_path}/sushie_2pop_rho_all.tsv.gz"))  %>%
filter(Lidx==1) %>%
filter(method %in% c("sushie", "mesusie", "xmap", "xmap_ind")) %>%
filter(N %in% "400:400" & L2 == 2 & L1 ==2 & L3==0 & h2g %in% "0.05:0.05") %>%
group_by(method, sim, N, L1, L2, L3, h2g, rho) %>%
summarize(mrho = mean(est_rho),
se = (sd(est_rho) / sqrt(n())),
n = n()) %>%
ungroup() %>%
select(sim, rho, mrho, name=method, se, n) %>%
mutate(name = factor(name,
levels = c("sushie", "mesusie", "xmap", "xmap_ind"),
labels = c("SuShiE", "MESuSiE", "XMAP", "XMAP-IND")))
small_p4 <- ggplot(df_rho ,
aes(x = factor(rho), y = mrho, color = name)) +
geom_point(size=point_size, position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = mrho -  1.96 *se, ymax = mrho +  1.96 *se),
position=position_dodge(width=0.5), width = 0.2) +
geom_hline(yintercept = c(0.01, 0.4, 0.8, 0.99),
linetype="dashed",color="grey", alpha=0.5) +
scale_y_continuous(labels = c("0.01", "0.4", "0.8", "0.99"),
breaks = c(0.01, 0.4, 0.8, 0.99)) +
scale_color_manual(values = method_colors) +
ylab("Estimation") +
xlab("True Effect Size Correlation") +
theme_sim()
load("./data/df_r2twas.RData")
df_r2 <- df_r2twas %>%
filter(h2g == "0.05:0.05" &
ngwas == 2e5 & h2ge == 0.3/2000
& type == "R2") %>%
group_by(sim, N, name) %>%
summarize(mvalue = mean(value),
se = 1.96 * sd(value) / sqrt(n()),
n = n()) %>%
mutate(N = case_when(
N == "200:200" ~ 200,
N == "400:400" ~ 400,
N == "600:600" ~ 600)) %>%
filter(name %in% c("SuShiE", "SuShiE-Indep",
"Meta-SuSiE", "SuSiE", "MESuSiE",
"XMAP", "XMAP-IND"))
small_p5 <- ggplot(df_r2,
aes(x = factor(N), y = mvalue, color = name)) +
geom_point(size=point_size, position=position_dodge(width=0.5)) +
scale_color_manual(values = twas_colors) +
geom_errorbar(aes(ymin = mvalue - se, ymax = mvalue + se),
width = 0.1, position=position_dodge(width=0.5)) +
scale_y_continuous(labels=scaleFUN) +
ylab("Predicted r-sqaured") +
xlab("Training Sample Size") +
theme_sim()
df_twas <- df_r2twas %>%
filter(N == "400:400" & h2g == "0.05:0.05" & h2ge == 0.3/2000 & type == "TWAS") %>%
group_by(sim, ngwas, name) %>%
summarize(mvalue = mean(value),
se = 1.96 * sqrt(sd(value) / n())) %>%
mutate(ngwas = factor(ngwas,  levels = c(100000, 200000, 300000),
labels = c("100k", "200k", "300k"))) %>%
filter(name %in% c("SuShiE", "SuShiE-Indep",
"Meta-SuSiE", "SuSiE", "MESuSiE",
"XMAP", "XMAP-IND"))
small_p6 <- ggplot(df_twas,
aes(x = factor(ngwas), y = mvalue, color = name)) +
geom_point(size=point_size, position=position_dodge(width=0.5)) +
scale_color_manual(values = twas_colors) +
geom_errorbar(aes(ymin = mvalue - se, ymax = mvalue + se),
width = 0.1, position=position_dodge(width=0.5)) +
scale_y_continuous( labels=scaleFUN) +
ylab("TWAS Power") +
xlab("GWAS Sample Size") +
theme_sim()
ggarrange(small_p1, small_p2, small_p3, small_p4, small_p5, small_p6,
nrow = 3, ncol = 2, labels = c("a", "b", "c", "d", "e", "f"),
common.legend = TRUE, legend="bottom", font.label = list(size=8))
# ggsave(filename = "./manuscript_plots/p2.png", width = p_width, height = 5.5)
ggsave(filename = "./manuscript_plots/p2.pdf", width = p_width, height = 5.5)
