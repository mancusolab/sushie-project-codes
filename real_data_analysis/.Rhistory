filter(abs(gamma_perm_z) > z_thresh) %>%
mutate(gene_type = "Mr. PEG",
signal = abs(gamma_perm_z)) %>%
select(trait, ENSEMBL, signal, gene_type) %>%
distinct(trait, ENSEMBL, signal, .keep_all = TRUE)
common_triats <- df_smr %>%
distinct(trait) %>%
inner_join(df_closest %>% distinct(trait)) %>%
inner_join(df_burden %>% distinct(trait)) %>%
inner_join(df_med %>% distinct(trait)) %>%
inner_join(df_transsmr %>% distinct(trait)) %>%
inner_join(df_transmr %>% distinct(trait))
df_wk <- bind_rows(df_smr, df_closest, df_med, df_burden, df_transsmr,
df_transmr) %>%
filter(trait %in% common_triats$trait) %>%
mutate(gene_type = factor(gene_type,
levels = c("Mr. PEG", "trans-MR", "SMR","trans-SMR", "GWAS", "Burden")))
mean_anno <- c(
"ABC_length_per_type",
"connectedness",  "PPI_degree_cat", "TF",
"HI", "RVIS", "EDS", "LOEUF")
median_anno <- c("TSSD", "length", "CDS_length", "ABC_count",
"Roadmap_count", "Roadmap_length_per_type",
"promoter_count",
"hs", "pLI", "s_het")
percent_anno <- c("connect_decile", "connect_quantile",  "PPI_degree_decile",
"PPI_degree_quantile")
df_perm_res <- tibble()
n_perm <- 100
n_trait <- length(unique(df_wk$trait))
set.seed(123)
df_perm_res <- tibble()
n_perm <- 100
n_trait <- length(unique(df_wk$trait))
set.seed(123)
for (single_anno in c(mean_anno, median_anno, percent_anno)) {
# tmp_anno <- df_anno %>%
#   filter(score == single_anno) %>%
#   filter(ENSEMBL %in% df_bg_high$ENSEMBL)
#
# df_perm_res <- df_perm_res %>%
#   bind_rows(tibble(gene_type = "High Perturb",
#     anno_type = single_anno,
#     m_value = mean(tmp_anno$value),
#     se_value = sd(tmp_anno$value)/sqrt(nrow(tmp_anno)),
#     upp = m_value + 1.96 * se_value,
#     low = m_value - 1.96 * se_value))
tmp_anno <- df_anno %>%
filter(score == single_anno)
df_perm_res <- df_perm_res %>%
bind_rows(tibble(gene_type = "Background",
anno_type = single_anno,
m_value = mean(tmp_anno$value),
se_value = sd(tmp_anno$value)/sqrt(nrow(tmp_anno)),
upp = m_value + 1.96 * se_value,
low = m_value - 1.96 * se_value))
for (tmp_gene_type in c("trans-SMR", "trans-MR", "SMR", "GWAS", "Mr. PEG",
"Burden")) {
tmp_df_wk <- df_wk %>%
filter(gene_type %in% tmp_gene_type)
print(glue("{tmp_gene_type}__{single_anno}"))
comp_anno <- tmp_df_wk %>%
left_join(tmp_anno) %>%
filter(!is.na(value))
# estimate SE
value_se <- c()
for (idx in 1:n_perm) {
tmp2 <- comp_anno[sample(1:nrow(comp_anno), replace = TRUE),]
value_se <- c(value_se, mean(tmp2$value))
}
df_perm_res <- df_perm_res %>%
bind_rows(tibble(gene_type = tmp_gene_type,
anno_type = single_anno,
m_value = mean(value_se),
upp = m_value + 1.96 * sd(value_se),
low = m_value - 1.96 * sd(value_se)))
}
}
df_plot2 <- df_perm_res %>%
filter(anno_type %in% c("Roadmap_length_per_type",
"promoter_count", "connect_decile", "CDS_length",
"HI", "EDS")) %>%
mutate(gene_type = factor(gene_type,
levels = c("Background", "Mr. PEG", "trans-MR", "trans-SMR", "SMR", "GWAS", "Burden"),
labels = c("BG", "Mr. PEG","trans-MR", "trans-SMR", "SMR", "GWAS", "Burden")),
anno_type = factor(anno_type,
levels = c("Roadmap_length_per_type",
"promoter_count", "connect_decile", "CDS_length",
"HI", "EDS"),
labels = c("Enhancer Length", "Promoter Count",
"Connectedness", "Coding Length", "pLI", "EDS")))
p3 <- ggplot(df_plot2 ,
aes(x = gene_type,
y = m_value)) +
geom_point(size=1) +
geom_errorbar(aes(ymin = low, ymax = upp), width= 0.3) +
facet_wrap(~anno_type, scales = "free", dir="v", nrow=2) +
theme(
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", color = "black", size = 1),
# strip.background = element_blank(),
strip.text.x = element_text(face = "bold", size = 8),
# panel.background = element_rect(fill = "white"),
axis.title = element_blank(),
axis.text.y = element_text(size=6),
axis.text.x = element_text(face="bold", size=6),
axis.ticks = element_blank())
p3
ggplot(df_perm_res ,
aes(x = gene_type,
y = m_value)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = upp)) +
facet_wrap(~anno_type, scales = "free")
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)
library(glue)
ref <- read_tsv("~/Documents/github/mrpeg_codes_private/real_data_run/param/mrpeg_traits_ref.tsv",
col_names = FALSE)
all_trait <- ref$X1
immune_trait1 <- c("RA_Ishigaki", "T1D_Chiou",
"PA_Soomro", "IBD_deLange", "Addison_Eriksson", "PBC_Cordell",
"Crohn_deLange", "UC_deLange", "Celiac_Dubois", "MS_IMSGC", "SLE_Bentham")
immune_trait <- c("RA", "T1D",
"PA", "IBD", "Addison", "PBC",
"Crohn", "UC", "Celiac", "MS", "SLE")
blood_trait <- c("RBC_Chen", "NEU_Chen", "WBC_Chen", "MCH_Chen",
"MCHC_Chen", "MPV_Chen", "RDW_Chen", "BAS_Chen", "MON_Chen", "LYM_Chen",
"EOS_Chen", "PLT_Chen", "HCT_Chen", "HGB_Chen", "MCV_Chen")
downstream_genes <- read_tsv("~/Documents/github/mrpeg_codes_private/real_data_prepare/gene_name_list/yao_downstream_genes.tsv") %>%
mutate(study = "yao") %>%
dplyr::select(-study)
upstream_genes <- read_tsv("~/Documents/github/mrpeg_codes_private/real_data_prepare/gene_name_list/yao_upstream_genes.tsv")
# trans-MR
tmp_df_mr <- read_tsv("~/Documents/github/data/mrpeg/real2/trans_mr.tsv.gz")
df_smr <- tmp_df_mr %>%
filter(gene %in% downstream_genes$ENSEMBL) %>%
mutate(smr_z = statistic) %>%
dplyr::select(trait, ENSEMBL=Gene, signal = smr_z) %>%
ungroup()
df_smr <- tmp_df_mr %>%
filter(gene %in% downstream_genes$ENSEMBL) %>%
mutate(smr_z = statistic) %>%
dplyr::select(trait, ENSEMBL=gene, signal = smr_z) %>%
ungroup()
df_smr
df_mr <- tmp_df_mr %>%
filter(gene %in% downstream_genes$ENSEMBL) %>%
mutate(smr_z = statistic) %>%
dplyr::select(trait, ENSEMBL=gene, signal = smr_z) %>%
ungroup()
df_mr
name_map <- bitr(unique(df_smr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
df_mr <- tmp_df_mr %>%
filter(gene %in% downstream_genes$ENSEMBL) %>%
mutate(smr_z = statistic) %>%
dplyr::select(trait, ENSEMBL=gene, signal = smr_z) %>%
ungroup()
df_mr
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)
library(glue)
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
df_mr$ENSEMBL
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)
library(glue)
ref <- read_tsv("~/Documents/github/mrpeg_codes_private/real_data_run/param/mrpeg_traits_ref.tsv",
col_names = FALSE)
all_trait <- ref$X1
immune_trait1 <- c("RA_Ishigaki", "T1D_Chiou",
"PA_Soomro", "IBD_deLange", "Addison_Eriksson", "PBC_Cordell",
"Crohn_deLange", "UC_deLange", "Celiac_Dubois", "MS_IMSGC", "SLE_Bentham")
immune_trait <- c("RA", "T1D",
"PA", "IBD", "Addison", "PBC",
"Crohn", "UC", "Celiac", "MS", "SLE")
blood_trait <- c("RBC_Chen", "NEU_Chen", "WBC_Chen", "MCH_Chen",
"MCHC_Chen", "MPV_Chen", "RDW_Chen", "BAS_Chen", "MON_Chen", "LYM_Chen",
"EOS_Chen", "PLT_Chen", "HCT_Chen", "HGB_Chen", "MCV_Chen")
downstream_genes <- read_tsv("~/Documents/github/mrpeg_codes_private/real_data_prepare/gene_name_list/yao_downstream_genes.tsv") %>%
mutate(study = "yao") %>%
dplyr::select(-study)
upstream_genes <- read_tsv("~/Documents/github/mrpeg_codes_private/real_data_prepare/gene_name_list/yao_upstream_genes.tsv")
# trans-MR
tmp_df_mr <- read_tsv("~/Documents/github/data/mrpeg/real2/trans_mr.tsv.gz")
df_mr <- tmp_df_mr %>%
filter(gene %in% downstream_genes$ENSEMBL) %>%
mutate(smr_z = statistic) %>%
dplyr::select(trait, ENSEMBL=gene, signal = smr_z) %>%
ungroup()
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
# burden
df_burden <- read_tsv("~/Documents/github/data/mrpeg/real/mrpeg_genebass.tsv") %>%
filter(ENSEMBL %in% downstream_genes$ENSEMBL) %>%
left_join(ref %>%
dplyr::select(trait = X6, trait2 = X1)) %>%
dplyr::select(-trait) %>%
dplyr::rename(trait = trait2)
df_burden
df_mr
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
name_map <- bitr(unique(df_burden$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
name_map
df_mr <- tmp_df_mr %>%
filter(gene %in% downstream_genes$ENSEMBL) %>%
mutate(smr_z = statistic) %>%
dplyr::select(trait, ENSEMBL=gene, signal = smr_z) %>%
ungroup()
name_map <- bitr(unique(df_mr$ENSEMBL), fromType="ENSEMBL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
name_map
length(unique(df_mr$ENSEMBL))
phen <- unique(df_mr$trait)[1]
res6 <- tibble()
df_mr %>%
filter(trait %in% phen) %>%
mutate(signal = abs(signal))
df_tmp <- df_mr %>%
filter(trait %in% phen) %>%
mutate(signal = abs(signal)) %>%
dplyr::select(ENSEMBL, signal) %>%
arrange(desc(signal)) %>%
inner_join(name_map, by = "ENSEMBL") %>%
dplyr::select(-ENSEMBL) %>%
group_by(ENTREZID) %>%
filter(abs(signal) == max(abs(signal)))
res6 <- tibble()
for (phen in unique(df_mr$trait)){
df_tmp <- df_mr %>%
filter(trait %in% phen) %>%
mutate(signal = abs(signal)) %>%
dplyr::select(ENSEMBL, signal) %>%
arrange(desc(signal)) %>%
inner_join(name_map, by = "ENSEMBL") %>%
dplyr::select(-ENSEMBL) %>%
group_by(ENTREZID) %>%
filter(abs(signal) == max(abs(signal)))
for (type in c("BP")) {
print(glue("{phen}...{type}"))
df_tmp <- as.data.frame(df_tmp)
geneList <- df_tmp[,1]
names(geneList) <- as.character(df_tmp[,2])
ego3 <- gseGO(geneList = geneList,
OrgDb = org.Hs.eg.db,
ont = type,
minGSSize = 10,
maxGSSize = 17000,
pvalueCutoff = 1,
scoreType = "pos")
res6 <- res6 %>%
bind_rows(tibble(data.frame(ego3)) %>%
dplyr::select(ID, Description, setSize, enrichmentScore, NES, pvalue, p.adjust) %>%
mutate(trait = phen,
gotype = type))
}
}
write_tsv(res6, "~/Documents/github/data/mrpeg/real2/enrich_transmr.tsv")
setwd("~/Documents/github/sushie-project-codes/real_data_analysis")
# this script is to create main figure 3
library(tidyverse)
library(broom)
library(RColorBrewer)
library(glue)
library(ggpubr)
source("./utils.R")
text_size <- 4
title_size <- 9
legend_size <- 8
bar_width <- 0.5
# change the data folder to the zenodo-downloaded data folder
data_folder <- "~/Downloads/sushie_real_data_results/all_results/"
metadata_folder <- "~/Downloads/sushie_real_data_results/metadata/"
# rnaseq
rnaseq_cov <- read_tsv(glue("{data_folder}/rnaseq_normal.sushie_cs.tsv.gz"))
proteins_cov<- read_tsv(glue("{data_folder}/proteins_normal.sushie_cs.tsv.gz"))
genoa_cov <- read_tsv(glue("{data_folder}/genoa_normal.sushie_cs.tsv.gz"))
# qtl
rnaseq_qtl <- rnaseq_cov %>%
filter(!is.na(snp)) %>%
group_by(trait) %>%
summarize(n = length(unique(CSIndex))) %>%
mutate(new_n = ifelse(n < 6, n, "6 or more")) %>%
group_by(new_n) %>%
mutate(ct = n()) %>%
ungroup() %>%
mutate(perc_val = round((ct/n() * 100), 2),
perc_str = paste0(perc_val,"%")) %>%
distinct(n,new_n, ct, perc_str,perc_val) %>%
mutate(study = "TOPMed-MESA mRNA")  %>%
filter(n <= 6)
proteins_qtl <- proteins_cov%>%
filter(!is.na(snp)) %>%
group_by(trait) %>%
summarize(n = length(unique(CSIndex))) %>%
mutate(new_n = ifelse(n < 6, n, "6 or more")) %>%
group_by(new_n) %>%
mutate(ct = n()) %>%
ungroup() %>%
mutate(perc_val = round((ct/n() * 100), 2),
perc_str = paste0(perc_val,"%")) %>%
distinct(n,new_n, ct, perc_str,perc_val) %>%
mutate(study = "TOPMed-MESA Protein")  %>%
filter(n <= 6)
genoa_qtl <- genoa_cov %>%
filter(!is.na(snp)) %>%
group_by(trait) %>%
summarize(n = length(unique(CSIndex))) %>%
mutate(new_n = ifelse(n < 6, n, "6 or more")) %>%
group_by(new_n) %>%
mutate(ct = n()) %>%
ungroup() %>%
mutate(perc_val = round((ct/n() * 100), 2),
perc_str = paste0(perc_val,"%")) %>%
distinct(n,new_n, ct, perc_str,perc_val) %>%
mutate(study = "GENOA mRNA")  %>%
filter(n <= 6)
# df_qtl <- bind_rows(rnaseq_qtl, genoa_qtl, proteins_qtl) %>%
df_qtl <- rnaseq_qtl %>%
bind_rows(proteins_qtl, genoa_qtl) %>%
mutate(new_n = factor(new_n, levels = c(1:5, "6 or more"),
labels = paste0(c(1:5, "6 or more"), "\n")),
study = factor(study, levels = c("TOPMed-MESA mRNA",
"TOPMed-MESA Protein", "GENOA mRNA")))
main_theme_p1 <- function() {
theme(panel.grid.major.x = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = NA),
legend.title = element_blank(),
legend.text = element_text(face = "bold", size = 6),
# legend.position = "none",
strip.text = element_blank(), # Removes facet labels
panel.spacing = unit(0.5, "lines"),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title=element_text(face="bold", size = 6),
axis.text = element_text(face = "bold", size = 7))
}
mp1 <- ggplot(df_qtl, aes(x=new_n, y=perc_val, fill = study)) +
geom_col(position = "dodge") +
scale_fill_manual(values = main_study_color) +
# geom_text(aes(label = perc_str), vjust = -0.3, size = 1.5) +
xlab("Number of molQTLs") +
ylab("Gene Percentage") +
scale_y_continuous(breaks=seq(0, 60, 10), limits = c(0, 65)) +
main_theme_p1()
leg <- get_legend(mp1, position = "bottom")
rnaseq_tss <- read_tsv(glue("{data_folder}/rnaseq_tss.tsv.gz")) %>%
group_by(Type) %>%
mutate(n_gene = length(unique(gene))) %>%
group_by(bins, Type) %>%
summarize(avg_signal = mean(mean),
n = n(),
n_gene = mean(n_gene)) %>%
mutate(study = "TOPMed-MESA mRNA")
proteins_tss <- read_tsv(glue("{data_folder}/proteins_tss.tsv.gz")) %>%
group_by(Type) %>%
mutate(n_gene = length(unique(gene))) %>%
group_by(bins, Type) %>%
summarize(avg_signal = mean(mean),
n = n(),
n_gene = mean(n_gene)) %>%
mutate(study = "TOPMed-MESA Protein")
genoa_tss <- read_tsv(glue("{data_folder}/genoa_tss.tsv.gz")) %>%
group_by(Type) %>%
mutate(n_gene = length(unique(gene))) %>%
group_by(bins, Type) %>%
summarize(avg_signal = mean(mean),
n = n(),
n_gene = mean(n_gene)) %>%
mutate(study = "GENOA mRNA")
df_pip <- rnaseq_tss %>%
filter(Type %in% "pip_all") %>%
bind_rows(proteins_tss %>%
filter(Type %in% "pip_all")) %>%
bind_rows(genoa_tss %>%
filter(Type %in% "pip_all")) %>%
mutate(bins = ((bins - 1000)*500)/1000,
study = factor(study, levels = c("TOPMed-MESA mRNA",
"TOPMed-MESA Protein", "GENOA mRNA")))
mp2 <- ggplot(df_pip, aes(x = bins, y = avg_signal, color=study)) +
geom_line() +
scale_color_manual(values = main_study_color) +
facet_grid(rows = vars(study)) +
xlab("Distance to TSS (kb)") +
ylab("Average PIP") +
scale_y_continuous(breaks=c(0, 0.03, 0.06), limits = c(0,0.06)) +
scale_x_continuous(breaks = c(-500, -250, 0, 250, 500),
labels = c("-500\n", "-250\n", "0\n", "250\n", "500\n")) +
main_theme_p1()
# enrich
rnaseq_enrich <- read_tsv(glue("{data_folder}/rnaseq_enrich_all.tsv.gz")) %>%
filter(!anno %in% c("tss_all", "tss_protein"))
proteins_enrich <- read_tsv(glue("{data_folder}/proteins_enrich_all.tsv.gz")) %>%
filter(!anno %in% c("tss_all", "tss_protein"))
genoa_enrich <- read_tsv(glue("{data_folder}/genoa_enrich_all.tsv.gz")) %>%
filter(!anno %in% c("tss_all", "tss_protein"))
enrich_list <- unique(rnaseq_enrich$anno)
ldsc_list <- enrich_list[grepl("LDSC", enrich_list)]
ldsc_list <- ldsc_list[order(ldsc_list)]
encode_list <- c("PLS", "pELS", "dELS", "CTCF-bound", "DNase-H3K4me3")
atac_list <- enrich_list[!enrich_list %in% c(ldsc_list,
encode_list, "snATAC-seq-frozen-peaks", "megakaryocyte")]
rnaseq_anno <- rnaseq_enrich %>%
filter(trait %in% filter(rnaseq_cov, !is.na(snp))$trait) %>%
filter(converged == 1 & reg == 0) %>%
filter(method %in% "pip_cov") %>%
filter(anno %in% encode_list) %>%
group_by(anno) %>%
mutate(weight = 1 / (se*2)) %>%
summarize(meta_est = sum(est*weight)/sum(weight),
meta_se = 1 / sqrt(sum(weight)),
log_est = meta_est / log(2),
low_int = (meta_est - 1.96*meta_se)/log(2),
upp_int = (meta_est + 1.96*meta_se)/log(2),
n = n()) %>%
mutate(study = "TOPMed-MESA mRNA")
proteins_anno <- proteins_enrich %>%
filter(trait %in% filter(proteins_cov, !is.na(snp))$trait) %>%
filter(converged == 1 & reg == 0) %>%
filter(method %in% "pip_cov") %>%
filter(anno %in% encode_list) %>%
group_by(anno) %>%
mutate(weight = 1 / (se*2)) %>%
summarize(meta_est = sum(est*weight)/sum(weight),
meta_se = 1 / sqrt(sum(weight)),
log_est = meta_est / log(2),
low_int = (meta_est - 1.96*meta_se)/log(2),
upp_int = (meta_est + 1.96*meta_se)/log(2),
n = n()) %>%
mutate(study = "TOPMed-MESA Protein")
genoa_anno <- genoa_enrich %>%
filter(trait %in% filter(genoa_cov, !is.na(snp))$trait) %>%
filter(converged == 1 & reg == 0) %>%
filter(method %in% "pip_cov") %>%
filter(anno %in% encode_list) %>%
group_by(anno) %>%
mutate(weight = 1 / (se*2)) %>%
summarize(meta_est = sum(est*weight)/sum(weight),
meta_se = 1 / sqrt(sum(weight)),
log_est = meta_est / log(2),
low_int = (meta_est - 1.96*meta_se)/log(2),
upp_int = (meta_est + 1.96*meta_se)/log(2),
n = n()) %>%
mutate(study = "GENOA mRNA")
df_anno <- rnaseq_anno %>%
bind_rows(proteins_anno, genoa_anno) %>%
select(anno, log_est, low_int, upp_int, study) %>%
mutate(anno = factor(anno,
levels = c("PLS", "pELS", "dELS",  "CTCF-bound", "DNase-H3K4me3"),
# labels = c("Promoter", "Proximal\nEnhancer",
#   "Distal\nEnhancer", "CTCF", "DNase\nH3K4me3")),
labels = c("PLS", "pELS",
"dELS", "CTCF", "DNase\nH3K4me3")),
study = factor(study, levels = c("TOPMed-MESA mRNA",
"TOPMed-MESA Protein", "GENOA mRNA")))
mp3 <- ggplot(df_anno,
aes(x = reorder(anno, log_est, decreasing = TRUE),
y = log_est, color=study)) +
geom_point(position=position_dodge(width=0.5)) +
geom_errorbar(aes(ymin = low_int, ymax = upp_int),
position=position_dodge(width=0.5), width = 0.2) +
ylab(bquote(bold(Log[2](Enrichment)))) +
xlab("Functional Annotations") +
scale_y_continuous(limits = c(-0.6,1.05), breaks = c(-0.5, 0, 0.5, 1)) +
scale_color_manual(values = main_study_color) +
geom_hline(yintercept=0, linetype="dashed") +
main_theme_p1()
enrich_res <- rnaseq_enrich %>%
filter(anno %in% c(atac_list, "snATAC-seq-frozen-peaks")) %>%
filter(trait %in% filter(rnaseq_cov, !is.na(snp))$trait) %>%
filter(converged == 1 & reg == 0) %>%
filter(method == "pip_cov") %>%
mutate(study = "TOPMed-MESA mRNA") %>%
bind_rows(proteins_enrich %>%
filter(anno %in% c(atac_list, "snATAC-seq-frozen-peaks")) %>%
filter(trait %in% filter(proteins_cov, !is.na(snp))$trait) %>%
filter(converged == 1 & reg == 0) %>%
filter(method == "pip_cov") %>%
mutate(study = "TOPMed-MESA Protein"),
genoa_enrich %>%
filter(anno %in% c(atac_list, "snATAC-seq-frozen-peaks")) %>%
filter(trait %in% filter(genoa_cov, !is.na(snp))$trait) %>%
filter(converged == 1 & reg == 0) %>%
filter(method == "pip_cov") %>%
mutate(study = "GENOA mRNA")) %>%
group_by(anno, study) %>%
mutate(weight = 1 / (se*2)) %>%
summarize(meta_est = sum(est*weight) / sum(weight),
meta_se = 1 / sqrt(sum(weight)),
log_est = meta_est / log(2),
low_int = (meta_est - 1.96 * meta_se) / log(2),
upp_int = (meta_est + 1.96 * meta_se) / log(2)) %>%
mutate(anno = factor(anno,
levels = c("regulatory-T",
"memory-CD-T", "adaptive-NK", "activated-CD-T",
"naive-T", "naive-B", "memory-B",
"non-classical-monocyte",
"classical-monocyte", "snATAC-seq-frozen-peaks"),
labels = c("Regulatory\nT", "Memeory\nCD-T",
"Adaptive\nNK",  "Activated\nCD-T", "Naive\nT", "Naive\nB", "Memory\nB",
"Non-classical\nMonocyte",  "Classical\nMonocyte", "PBMC")),
study = factor(study, levels = c("TOPMed-MESA mRNA",
"TOPMed-MESA Protein", "GENOA mRNA")))
main1 <- ggarrange(mp1, mp2, mp3, align = "h", nrow=1,
labels = c("a", "b", "c"), font.label = list(size = 10),
legend.grob =leg, legend = "bottom")
ggsave("./plots/p3.pdf", width = 7.08, height = p_height)
